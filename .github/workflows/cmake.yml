name: CMake

on:
  push:
    branches: [ "master", "linter-test" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Cache OpenCV
      id: opencv-cache
      uses: actions/cache@v2
      with:
        path: ./opencv-install
        key: ${{ runner.os }}-opencv-cache

    - name: With OpenCV
      # You may pin to the exact commit or the version.
      # uses: rayandrew/with-opencv-action@6e5ae5d68caa714afee7baceb5c2c052c3c43adb
      uses: rayandrew/with-opencv-action@v1
      with:
        # Directory to clone OpenCV, required to cache path
        dir: ./opencv-install
        # Whether to build OpenCV completely again or just run make install from previously built binaries.
        cached: ${{ steps.opencv-cache.outputs.cache-hit }}
        # OpenCV version to be installed.
        opencv-version: 4.5.2
        # If opencv-contrib (extra modules) should be included in the instalation.
        opencv-extra-modules: true
        # If dependencies should be installed as well.
        install-deps: true
        # 
        # CMAKE_BUILD_TYPE: # optional, default is RELEASE
        # 
        # CMAKE_CXX_COMPILER: # optional, default is g++
        # 
        # CMAKE_INSTALL_PREFIX: # optional, default is /usr/local
        # 
        # WITH_TBB: # optional, default is true
        # 
        # WITH_IPP: # optional, default is true
        # 
        # BUILD_NEW_PYTHON_SUPPORT: # optional
        # 
        # WITH_V4L: # optional
        # 
        # ENABLE_PRECOMPILED_HEADERS: # optional, default is true
        # 
        # INSTALL_C_EXAMPLES: # optional
        # 
        # INSTALL_PYTHON_EXAMPLES: # optional
        # 
        # BUILD_EXAMPLES: # optional
        # 
        # WITH_QT: # optional
        # 
        # WITH_OPENGL: # optional
        # 
        # GENERATE_PKGCONFIG: # optional
    
    - name: Build & Install MORB_SLAM
      run: ./morbslam_installer.sh
      
    - name: Export Compile Commands
      uses: actions/upload-artifact@v3
      with:
        name: compile_commands
        path: build/compile_commands.json
      
